{
    "FAKE_NEXUS": {
        "name": "Simple file server",
        "type": "external",
        "location": "../",
        "cmd": [
            "python",
            "fakenexus.py"
        ],
        "healthcheck": {
            "url": "http://localhost:8060/ping",
            "response": "pong"
        },
        "pattern": ".*fakenexus.*"
    },
    "FAKE_BINTRAY": {
        "name": "Simple bintray mock server",
        "type": "external",
        "location": "../",
        "cmd": [
            "python",
            "fakebintray.py"
        ],
        "healthcheck": {
            "url": "http://localhost:8061/ping",
            "response": "pong"
        },
        "pattern": ".*fakebintray.*"
    },
    "TEST_ONE": {
        "name": "Test service one",
        "type": "external",
        "location": ".",
        "cmd": [
            "sleep",
            "990873470001"
        ],
        "pattern": ".*990873470001.*"
    },
    "TEST_TWO": {
        "name": "Test Service two",
        "type": "external",
        "location": ".",
        "cmd": [
            "sleep",
            "990873470002"
        ],
        "pattern": ".*990873470002.*"
    },
    "TEST_THREE": {
        "name": "Test Service Three",
        "type": "external",
        "location": ".",
        "cmd": [
            "sleep",
            "990873470003"
        ],
        "pattern": ".*990873470003.*"
    },
    "TEST_TEMPLATE": {
        "template" : "EXTERNAL_EXAMPLE_TEMPLATE",
        "name": "Test Service Three",
        "cmd": [
            "sleep",
            "990873470004"
        ],
        "some_parameter" : "value we expect",
        "anestedvalue" : {
            "override" : "will have this value",
            "new" : "and this value"
        }
    },
    "DROPWIZARD_NEXUS_END_TO_END_TEST": {
        "name": "Test Dropwizard App",
        "type": "dropwizard",
        "versionEnv": "HODSTUBS_VERSION",
        "location": "/application-manager/src/universal/test/testapps/basicdropwizardapp",
        "hasServiceMappings": false,
        "defaultPort" : 8080,
        "defaultAdminPort" : 8081,
        "healthcheck": {
            "url": "http://localhost:${port}/ping",
            "response": "pong"
        },
        "sources": {
            "cmd": [
                "./startappfromcode.sh"
            ],
            "repo": "git@github.com:hmrc/service-manager.git"
        },
        "binary": {
            "ext": "zip",
            "artifact": "dwtest",
            "groupId":"foo/bar/foo/",
            "nexus" : "/content/repositories/",
            "configurationFile": "../../../../../../../../../testapps/basicdropwizardapp/config/dev_config.yml",
            "cmd" : [
                "java",
                "-jar",
                "dwtest-999-shaded.jar",
                "server",
                "dwtest-999-shaded/config/dev_config.yml"
            ]
        }
    },
    "PLAY_NEXUS_END_TO_END_TEST": {
        "name": "A simple play application for testing",
        "type": "play",
        "location": "/testapps/basicplayapp",
        "hasServiceMappings": true,
        "defaultPort" : 8500,
        "hasMongo" : true,
        "healthcheck": {
            "url": "http://localhost:${port}",
            "response": ""
        },
        "sources": {
            "cmd": [
                "play",
                "start"
            ],
            "extra_params": [
                 "-DFoo=false"
            ],
            "repo": "git@github.com:hmrc/service-manager.git"
        },
        "binary": {
             "ext": "zip",
             "artifact": "playtest",
             "groupId":"foo/bar/foo/",
             "nexus": "/content/repositories/",
             "destinationSubdir" : "basicplayapp",
             "cmd": [
                     "./basicplayapp/bin/basicplayapp",
                     "-DProd.microservice.whitelist.useWhitelist=false",
                     "-DProd.mongodb.uri=mongodb://localhost:27017/auth",
                     "-J-Xmx256m",
                     "-J-Xms256m",
                     "-J-XX:MaxPermSize=128m"
            ]
        }
    },
    "PLAY_NEXUS_ZIP_TEST": {
        "name": "A simple play application for testing",
        "type": "play",
        "location": "/testapps/basicplayapp",
        "hasServiceMappings": true,
        "defaultPort" : 8500,
        "hasMongo" : true,
        "healthcheck": {
            "url": "http://localhost:${port}",
            "response": ""
        },
        "sources": {
            "cmd": [
                "play",
                "start"
            ],
            "extra_params": [
                 "-DFoo=false"
            ],
            "repo": "git@github.com:hmrc/service-manager.git"
        },
        "binary": {
             "ext": "zip",
             "artifact": "playtest",
             "groupId":"foo/bar/foo/",
             "nexus": "/content/repositories/",
             "destinationSubdir" : "basicplayapp",
             "cmd": [
                     "./basicplayapp/bin/basicplayapp",
                     "-DProd.microservice.whitelist.useWhitelist=false",
                     "-DProd.mongodb.uri=mongodb://localhost:27017/auth",
                     "-J-Xmx256m",
                     "-J-Xms256m",
                     "-J-XX:MaxPermSize=128m"
            ]
        }
    },
    "PLAY_NEXUS_TGZ_TEST": {
        "name": "A simple play application for testing",
        "type": "play",
        "location": "/testapps/basicplayapp",
        "hasServiceMappings": true,
        "defaultPort" : 8500,
        "hasMongo" : true,
        "healthcheck": {
            "url": "http://localhost:${port}",
            "response": ""
        },
        "sources": {
            "cmd": [
                "play",
                "start"
            ],
            "extra_params": [
                 "-DFoo=false"
            ],
            "repo": "git@github.com:hmrc/service-manager.git"
        },
        "binary": {
             "artifact": "playtgz",
             "groupId":"foo/bar/foo/",
             "nexus": "/content/repositories/",
             "destinationSubdir" : "playtgz",
             "cmd": [
                     "./playtgz/bin/basicplayapp",
                     "-DProd.microservice.whitelist.useWhitelist=false",
                     "-DProd.mongodb.uri=mongodb://localhost:27017/auth",
                     "-J-Xmx256m",
                     "-J-Xms256m",
                     "-J-XX:MaxPermSize=128m"
            ]
        }
    },
    "PLAY_BINTRAY_END_TO_END_TEST": {
        "name": "A simple play application for testing on Bintray",
        "type": "play",
        "location": "/testapps/basicplayapp",
        "hasServiceMappings": true,
        "defaultPort" : 8500,
        "hasMongo" : true,
        "healthcheck": {
            "url": "http://localhost:${port}",
            "response": ""
        },
        "sources": {
            "cmd": [
                "play",
                "start"
            ],
            "extra_params": [
                 "-DFoo=false"
            ],
            "repo": "git@github.com:hmrc/service-manager.git"
        },
        "binary": {
             "artifact": "playtest_2.11",
             "groupId":"uk/gov/hmrc/",
             "destinationSubdir" : "basicplayapp",
             "cmd": [
                     "./basicplayapp/bin/basicplayapp",
                     "-DProd.microservice.whitelist.useWhitelist=false",
                     "-DProd.mongodb.uri=mongodb://localhost:27017/auth",
                     "-J-Xmx256m",
                     "-J-Xms256m",
                     "-J-XX:MaxPermSize=128m"
            ]
        }
    },
    "BROKEN_PLAY_PROJECT": {
        "name": "A play application with a breaking healthcheck for testing",
        "type": "play",
        "location": "/testapps/basicplayapp",
        "hasServiceMappings": true,
        "defaultPort" : 8500,
        "hasMongo" : true,
        "healthcheck": {
            "url": "http://localhost:${port}/broken/ping",
            "response": ""
        },
        "sources": {
            "cmd": [
                "play",
                "start"
            ],
            "extra_params": [
                 "-DFoo=false"
            ],
            "repo": "git@github.com:hmrc/service-manager.git"
        },
        "binary": {
             "ext": "zip",
             "artifact": "playtest",
             "groupId":"foo/bar/foo/",
             "nexus": "/content/repositories/",
             "destinationSubdir" : "basicplayapp",
             "cmd": [
                    "./basicplayapp/bin/basicplayapp",
                     "-DProd.microservice.whitelist.useWhitelist=false",
                     "-DProd.mongodb.uri=mongodb://localhost:27017/auth",
                     "-J-Xmx256m",
                     "-J-Xms256m",
                     "-J-XX:MaxPermSize=128m"
            ]
        }
    },
    "PYTHON_SIMPLE_SERVER_ASSETS_FRONTEND": {
        "name": "Assets",
        "type": "assets",
        "includeInStartAndStopAll": false,
        "cmd": [
            "grunt"
        ],
        "always_run_from" : "RELEASE",
        "versionEnv": "FRONTEND_VERSION",
        "location": "/assets-frontend",
        "pattern": "SimpleHTTPServer",
        "source_pattern": "grunt",
        "defaultPort" : 9032,
        "hasMongo": false,
        "hasServiceMappings": true,
        "healthcheck": {
            "url": "http://localhost:${port}",
            "response": "200"
        },
        "sources": {
            "cmd": [
                "./server.sh",
                "dev"
            ],
            "repo": "foo@foo.com"
        },
        "binary": {
            "artifact": "assets-frontend",
            "groupId":"foo/bar/foo/",
            "nexus": "/content/repositories/",
            "nexus-api": "/service/local/repositories/",
            "destinationSubdir": "assets-frontend",
            "cmd": [
                "python -m SimpleHTTPServer 9032"
            ]
        }
    }
}
